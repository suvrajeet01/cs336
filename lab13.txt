Exercise 13.1

What benefit did using the React Router bring to the application?
    It allows you to have different URLs for different pieces of the application
Which is better, hash history or browser history?
    Hash requires less configuration but doesn't produce urls that looks nice while browser history does with the tradeoff of more configuration
Why does the server (either Webpack Dev Server or the Express server) have to be modified to support the browser history? Compare this with the hash-based server demonstrated in class, which didn't require such modifications.
    The server needs to be able to handle all URLs even though the URLs dont really exist since they are just rewritten. With hash based history state is tracked with the URL and therefore no additional configuration is required.

Exercise 13.2

What state does the new CommentEdit component maintain and how does that compare with the state maintained by the CommentBox component?
    The author and comment text state are maintained by CommentEdit. The CommentBox component is using the same data and after the data on the database is changed by CommentEdit it will be updated in CommentBox.
What does the CommentEdit component do when the AJAX PUT or DELETE methods return successfully? How does this compare with what the “Cancel” button provided by the CommentEdit component does?
    When PUT or DELETE complete successfully, the user is sent back to /. The Cancel button does the same, but doesn't rely on the success of any requests.
How is the Link added in the last step different from a simple HTML hyperlink?
    It is a react router class which allows you to use the properties of react classes in the url and allows react router to keep track of the URL.

Exercise 13.3

https://lab13-tpt3.herokuapp.com/